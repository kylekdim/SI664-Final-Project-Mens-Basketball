# Generated by Django 2.1.4 on 2018-12-08 05:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllStar',
            fields=[
                ('all_star_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('conference', models.CharField(blank=True, max_length=20, null=True)),
                ('games_played', models.IntegerField(blank=True, null=True)),
                ('minutes', models.IntegerField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('rebounds', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('steals', models.IntegerField(blank=True, null=True)),
                ('blocks', models.IntegerField(blank=True, null=True)),
                ('turnovers', models.IntegerField(blank=True, null=True)),
                ('ft_attempted', models.IntegerField(blank=True, null=True)),
                ('ft_made', models.IntegerField(blank=True, null=True)),
                ('three_attempted', models.IntegerField(blank=True, null=True)),
                ('three_made', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_star',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('league_id', models.AutoField(primary_key=True, serialize=False)),
                ('league_abbrev', models.CharField(max_length=10, unique=True)),
                ('league_name', models.CharField(db_column='League_name', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'league',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerRecord',
            fields=[
                ('player_record_id', models.AutoField(primary_key=True, serialize=False)),
                ('player_id_long', models.CharField(max_length=10, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30)),
                ('full_given_name', models.CharField(blank=True, max_length=100, null=True)),
                ('name_suffix', models.CharField(blank=True, max_length=5, null=True)),
                ('nickname', models.CharField(blank=True, max_length=30, null=True)),
                ('pos', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('college', models.CharField(blank=True, max_length=50, null=True)),
                ('birthdate', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_city', models.CharField(blank=True, max_length=50, null=True)),
                ('birth_state', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_country', models.CharField(blank=True, max_length=50, null=True)),
                ('high_school', models.CharField(blank=True, max_length=50, null=True)),
                ('hs_city', models.CharField(blank=True, max_length=50, null=True)),
                ('hs_state', models.CharField(blank=True, max_length=20, null=True)),
                ('hs_country', models.CharField(blank=True, max_length=30, null=True)),
                ('death_date', models.CharField(blank=True, max_length=20, null=True)),
                ('race', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'player_record',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_abbrev', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('arena', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamStat',
            fields=[
                ('team_stat_id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.IntegerField()),
                ('home_won', models.IntegerField()),
                ('home_lost', models.IntegerField()),
                ('away_won', models.IntegerField()),
                ('away_lost', models.IntegerField()),
                ('neut_won', models.IntegerField()),
                ('neut_lost', models.IntegerField()),
                ('won', models.IntegerField()),
                ('lost', models.IntegerField()),
                ('games', models.IntegerField()),
            ],
            options={
                'db_table': 'team_stat',
                'managed': False,
            },
        ),
    ]
